---
# tasks file for mysql
- name: Install Python 3
  become: true
  # hosts: dataserver
  package:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - mysql-client
    - python3-mysqldb
    - libmysqlclient-dev

# - name: Install pip
#   ansible.builtin.apt:
#     name: python3-pip
#     update_cache: true
#     state: present

# - name: install pymysql
#   # become: true
#   pip:
#     name: pymysql
#     state: present

- name: Install MySQL Database
  become: true
  apt: 
    name: "{{ item }}"
    update_cache: true
    state: present
  with_items: 
    - mysql-server
  notify: 
    - Enable mysql service
    - Start mysql service

- name: Set Root User & Root Password to Secure MySq
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: root

- name: Remove Anonymous Users
  mysql_user:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Ensure no user named 'db_user'@'localhost' exists, also passing in the auth credentials.
  mysql_user:
    name: mysql
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Create Database
  mysql_db:
    name: "{{ mysql_db_name }}"
    state: present
    login_host: webserver
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create MySQL user with password with access from any host (0.0.0.0)
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    state: present
    host: "%"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

# If you want to give all priv to your database only. use priv: "{{ your_db_name }}.*:ALL,GRANT"
- name: Grant all privileges on all databases to a user from any host
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_user_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

# create user 'mysql'@'%' identified by 'xyz@123';
# grant all on *.* to 'mysql'@'%'' with grant option;

- name: Allow MySQL Server to listen on all IPV4 to access user your database.
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '^bind-address\s+=\s+127.0.0.1$'
    line: "{{ item }}"
  with_items: 
    - 'bind-address            = 0.0.0.0'
  notify: 
    - Restart MySQL Service